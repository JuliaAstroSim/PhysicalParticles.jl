name: CI

on: [push, pull_request]

# 64-bit Julia only
jobs:
  test:
    name: Julia ${{ matrix.version }} - ${{ matrix.os }} - ${{ matrix.arch }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        version:
          - ['1.3.0']
        os:
          - ubuntu-latest
          - macOS-latest
          - windows-latest
        arch:
          - x64
    steps:
      - run: echo ACTIONS_RUNNER_DEBUG true
      - uses: actions/checkout@v1
      - name: "Set up Julia"
        uses: julia-actions/setup-julia@latest
        with:
          version: ${{ matrix.version }}
          arch: ${{ matrix.arch }}
      #- uses: julia-actions/julia-buildpkg@latest
      - uses: julia-actions/julia-runtest@latest
        env: 
          ACTIONS_RUNNER_DEBUG: true
  build:
    name: Documentation
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        julia-version: ['1.3.0']
        julia-arch: [x64]
        os: [ubuntu-latest]
    steps:
      - uses: actions/checkout@v1.0.0
      - uses: julia-actions/setup-julia@latest
        with:
          version: ${{ matrix.julia-version }}
      - name: Install dependencies
        run: julia --project=docs -e 'using Pkg; Pkg.instantiate(); Pkg.update()'
      - name: Build and deploy
        env:
          #GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # Deploying to else where, so use SSH instead
          DOCUMENTER_KEY: ${{ secrets.DOCUMENTER_KEY }}
        run: julia --project=docs --color=yes docs/make.jl